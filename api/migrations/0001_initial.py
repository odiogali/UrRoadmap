# Generated by Django 5.2 on 2025-04-16 09:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DegreeProgram',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('degree_type', models.CharField(choices=[('Ba', 'Bachelors'), ('Ma', 'Masters')], default='Ba', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fname', models.CharField(max_length=50)),
                ('lname', models.CharField(max_length=50)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.CharField(max_length=8, primary_key=True, serialize=False)),
                ('fname', models.CharField(max_length=50)),
                ('lname', models.CharField(max_length=50)),
                ('student_type', models.CharField(choices=[('U', 'Undergraduate'), ('G', 'Graduate')], max_length=1)),
                ('gpa', models.FloatField(blank=True, null=True)),
                ('degree_program', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='api.degreeprogram')),
                ('majors', models.ManyToManyField(related_name='majoring_students', to='api.department')),
                ('minors', models.ManyToManyField(blank=True, related_name='minoring_students', to='api.department')),
            ],
        ),
        migrations.CreateModel(
            name='TeachingStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Textbook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isbn', models.CharField(max_length=13, unique=True)),
                ('title', models.CharField(max_length=100)),
                ('edition_no', models.CharField(blank=True, max_length=2, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('prerequisites', models.ManyToManyField(blank=True, related_name='is_prerequisite_for', to='api.course')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='api.department')),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('employee', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='api.employee')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='professors', to='api.department')),
            ],
        ),
        migrations.CreateModel(
            name='AdminStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_staff', to='api.department')),
                ('employee', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, to='api.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Graduate',
            fields=[
                ('student_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.student')),
                ('thesis', models.CharField(blank=True, max_length=255, null=True)),
                ('research_area', models.CharField(blank=True, max_length=100, null=True)),
            ],
            bases=('api.student',),
        ),
        migrations.CreateModel(
            name='Undergraduate',
            fields=[
                ('student_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.student')),
                ('credits_completed', models.IntegerField()),
            ],
            bases=('api.student',),
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(max_length=20)),
                ('section_id', models.CharField(max_length=3)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='api.course')),
                ('instructor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teaching_sections', to='api.teachingstaff')),
            ],
            options={
                'unique_together': {('course', 'section_id', 'semester')},
            },
        ),
        migrations.CreateModel(
            name='CourseTextbook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_required', models.BooleanField(null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.course')),
                ('textbook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.textbook')),
            ],
            options={
                'unique_together': {('course', 'textbook')},
            },
        ),
        migrations.AddField(
            model_name='course',
            name='textbooks',
            field=models.ManyToManyField(through='api.CourseTextbook', to='api.textbook'),
        ),
        migrations.AddField(
            model_name='teachingstaff',
            name='professor',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teaching_position', to='api.professor'),
        ),
        migrations.CreateModel(
            name='SupportStaff',
            fields=[
                ('employee', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='api.employee')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='support_staff', to='api.department')),
            ],
        ),
        migrations.AddField(
            model_name='teachingstaff',
            name='graduate_student',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teaching_position', to='api.graduate'),
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('F', 'F'), ('P', 'Pass'), ('NP', 'Not Pass'), ('W', 'Withdrawn'), ('I', 'Incomplete')], max_length=2, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='api.student')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='api.section')),
            ],
            options={
                'unique_together': {('student', 'section')},
            },
        ),
    ]
