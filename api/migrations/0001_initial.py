# Generated by Django 5.2 on 2025-04-18 05:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdminStaff',
            fields=[
                ('eid', models.IntegerField(db_column='EID', primary_key=True, serialize=False)),
                ('fname', models.CharField(blank=True, db_column='Fname', max_length=50, null=True)),
                ('lname', models.CharField(blank=True, db_column='Lname', max_length=50, null=True)),
                ('salary', models.IntegerField(blank=True, db_column='Salary', null=True)),
            ],
            options={
                'db_table': 'admin_staff',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_code', models.CharField(db_column='Course_code', max_length=10, primary_key=True, serialize=False)),
                ('textbook_isbn', models.CharField(blank=True, db_column='Textbook_ISBN', max_length=20, null=True)),
            ],
            options={
                'db_table': 'course',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DegreeProgram',
            fields=[
                ('prog_name', models.CharField(db_column='Prog_name', max_length=50, primary_key=True, serialize=False)),
                ('specialization', models.CharField(blank=True, db_column='Specialization', max_length=50, null=True)),
            ],
            options={
                'db_table': 'degree_program',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('dno', models.IntegerField(db_column='Dno', primary_key=True, serialize=False)),
                ('dname', models.CharField(blank=True, db_column='Dname', max_length=50, null=True)),
                ('manager_id', models.IntegerField(blank=True, db_column='Manager_id', null=True)),
            ],
            options={
                'db_table': 'department',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.IntegerField(db_column='Student_id', primary_key=True, serialize=False)),
                ('fname', models.CharField(blank=True, db_column='Fname', max_length=50, null=True)),
                ('lname', models.CharField(blank=True, db_column='Lname', max_length=50, null=True)),
            ],
            options={
                'db_table': 'student',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HasAsAntireq',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'has_as_antireq',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HasAsPreq',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'has_as_preq',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HasTaken',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('grade', models.CharField(blank=True, db_column='Grade', max_length=2, null=True)),
                ('course_status', models.IntegerField(blank=True, db_column='Course_status', null=True)),
            ],
            options={
                'db_table': 'has_taken',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('eid', models.IntegerField(db_column='EID', primary_key=True, serialize=False)),
                ('fname', models.CharField(blank=True, db_column='Fname', max_length=50, null=True)),
                ('lname', models.CharField(blank=True, db_column='Lname', max_length=50, null=True)),
                ('salary', models.IntegerField(blank=True, db_column='Salary', null=True)),
                ('research_area', models.CharField(blank=True, db_column='Research_area', max_length=50, null=True)),
            ],
            options={
                'db_table': 'professor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Requires',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'requires',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('s_id', models.IntegerField(db_column='S_ID')),
                ('semester', models.CharField(blank=True, db_column='Semester', max_length=6, null=True)),
            ],
            options={
                'db_table': 'section',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SupportStaff',
            fields=[
                ('eid', models.IntegerField(db_column='EID', primary_key=True, serialize=False)),
                ('fname', models.CharField(blank=True, db_column='Fname', max_length=50, null=True)),
                ('lname', models.CharField(blank=True, db_column='Lname', max_length=50, null=True)),
                ('salary', models.IntegerField(blank=True, db_column='Salary', null=True)),
                ('dno', models.IntegerField(blank=True, db_column='Dno', null=True)),
            ],
            options={
                'db_table': 'support_staff',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TeachingStaff',
            fields=[
                ('teaching_id', models.IntegerField(db_column='Teaching_ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'teaching_staff',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Textbook',
            fields=[
                ('isbn', models.CharField(db_column='ISBN', max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=200, null=True)),
                ('edition_no', models.IntegerField(blank=True, db_column='Edition_no', null=True)),
                ('price', models.FloatField(blank=True, db_column='Price', null=True)),
            ],
            options={
                'db_table': 'textbook',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorksFor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'works_for',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Graduate',
            fields=[
                ('student', models.OneToOneField(db_column='Student_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.student')),
                ('thesis_title', models.CharField(blank=True, db_column='Thesis_title', max_length=100, null=True)),
                ('research_area', models.CharField(blank=True, db_column='Research_area', max_length=50, null=True)),
            ],
            options={
                'db_table': 'graduate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Undergraduate',
            fields=[
                ('student', models.OneToOneField(db_column='Student_id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.student')),
                ('credits_completed', models.IntegerField(blank=True, db_column='Credits_completed', null=True)),
            ],
            options={
                'db_table': 'undergraduate',
                'managed': False,
            },
        ),
    ]
